// Generated by @compas/code-gen

"use client";

import type { AxiosInstance } from "axios";
import type { PropsWithChildren } from "react";
import React from "react";
import { createContext, useContext } from "react";
export type Pretty<T> = { [K in keyof T]: T[K] } & {};

const ApiContext = createContext<AxiosInstance | undefined>(undefined);

export function ApiProvider({
  instance,
  children,
}: PropsWithChildren<{
  instance: AxiosInstance;
}>) {
  return <ApiContext.Provider value={instance}>{children}</ApiContext.Provider>;
}

export const useApi = () => {
  const context = useContext(ApiContext);

  if (!context) {
    throw Error("Be sure to wrap your application with <ApiProvider>.");
  }

  return context;
};
