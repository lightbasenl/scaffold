// Generated by @compas/code-gen
/* eslint-disable no-unused-vars */

import { useApi, AppErrorResponse } from "../common/reactQuery";
import { AxiosInstance } from "axios";
import {
QueryKey,
UseMutationOptions,
UseMutationResult,
UseQueryOptions,
UseQueryResult,
useMutation,
useQuery,
useQueryClient,
QueryClient,
} from "@tanstack/react-query";
import * as T from "../common/types";
import {
apiMultitenantCurrent,



} from "./apiClient";



/**
 * Get information about the current tenant.
*/
export function useMultitenantCurrent<TData = T.MultitenantCurrentResponseApi>(opts?: {
options?: UseQueryOptions<T.MultitenantCurrentResponseApi, AppErrorResponse, TData> | undefined,
}|undefined) {
const axiosInstance = useApi();
const options = opts?.options ?? {};
return useQuery(useMultitenantCurrent.queryKey(
),
({ signal }) => {
return apiMultitenantCurrent(
axiosInstance,
{ signal },
);
},
options,
);
}
/**
 * Base key used by useMultitenantCurrent.queryKey()
*/
useMultitenantCurrent.baseKey = (): QueryKey => ["multitenant", "current"];
/**
 * Query key used by useMultitenantCurrent
*/
useMultitenantCurrent.queryKey = (
): QueryKey => [
...useMultitenantCurrent.baseKey(),
];
/**
 * Fetch useMultitenantCurrent via the queryClient and return the result
*/
useMultitenantCurrent.fetch = (
queryClient: QueryClient,
axiosInstance: AxiosInstance,
) => queryClient.fetchQuery(useMultitenantCurrent.queryKey(
), () => apiMultitenantCurrent(
axiosInstance,
));
/**
 * Prefetch useMultitenantCurrent via the queryClient
*/
useMultitenantCurrent.prefetch = (
queryClient: QueryClient,
axiosInstance: AxiosInstance,
) => queryClient.prefetchQuery(useMultitenantCurrent.queryKey(
), () => apiMultitenantCurrent(
axiosInstance,
));
/**
 * Invalidate useMultitenantCurrent via the queryClient
*/
useMultitenantCurrent.invalidate = (
queryClient: QueryClient,
axiosInstance: AxiosInstance,
) => queryClient.invalidateQueries(useMultitenantCurrent.queryKey(
));
/**
 * Set data for useMultitenantCurrent on the queryClient
*/
useMultitenantCurrent.setQueryData = (
queryClient: QueryClient,
data: T.MultitenantCurrentResponseApi,
) => queryClient.setQueryData(useMultitenantCurrent.queryKey(
), data);
