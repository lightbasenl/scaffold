// Generated by @compas/code-gen
/* eslint-disable no-unused-vars, @typescript-eslint/no-explicit-any, unused-imports/no-unused-imports, @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-interface, @typescript-eslint/ban-types */

import type { UseMutationOptions, UseMutationResult } from "@tanstack/react-query";

import {
  QueryKey,
  UseQueryOptions,
  UseQueryResult,
  useMutation,
  useQuery,
  useQueryClient,
  QueryClient,
} from "@tanstack/react-query";
import { AxiosInstance } from "axios";

import type { AppErrorResponse } from "generated/common/reactQuery";
import { useApi } from "generated/common/reactQuery";
import type * as T from "generated/common/types";

import { apiScaffoldCreateUser } from "./apiClient";

interface UseScaffoldCreateUserProps {}
/**
 *
 */
export function useScaffoldCreateUser(
  options: UseMutationOptions<
    T.ScaffoldCreateUserResponseApi,
    AppErrorResponse,
    UseScaffoldCreateUserProps
  > = {},
): UseMutationResult<T.ScaffoldCreateUserResponseApi, AppErrorResponse, UseScaffoldCreateUserProps, unknown> {
  const axiosInstance = useApi();
  return useMutation(variables => apiScaffoldCreateUser(axiosInstance), options);
}
